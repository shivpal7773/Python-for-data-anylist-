# -*- coding: utf-8 -*-
"""day1.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v5SI8FFKXR_GvbhTflzgrjZhvr1UL8zh

# **Python for date analytics**




1. what is data analytics ?

= Data analysis is the science of analyzing raw data to find trends and answer questions .

2. what is python ?

= Python is both compiled and interpreted , object oriented ,high level programming language with dynamic semantics .

3. Creator of python ?

= Guido van rossum
python was developed in 1991 by a dutch programmer , Guido van rossum.
Guido van rossum named python from the british sketch comedy series monty pythons flying circus . Of he was a big fan .

  - python 2.0 was released in 2000.

  - python 3.0 released in 2008

4. Features of python ?

object oriented / dynamically typed / GUI programming support / extesible / large standard library / free and open source /cross platform language / interpreted language / experessive language / easy to learn and use .

5. Applications of python ?

data science / web development / data engineering / machine learning / artificial intelligence / data analysis

# Print Statement

to call a print function in python we just need to write prient followed by parentheses () and value written inside quatation marks .
"""

print("hello world ")

"""**Using multiple lines in print statement .**

There are two method to write a statement in multiple lines .

1. To print multiple lines in python " Triple Qustation " ('''  ''') are used .
"""

print('''hello
shivpal
      singh
      world ''')

"""2. \n (backslash) in used to insert someting in the next line ."""

print("hello \nshivpal \nsingh")

"""# variable  

  Variables are place holders , which can store a value .

  In simple words , variables is a container that holds data inside it is a value.

Rules for writing a variables :-

1. Python is case-sensitive language . there for the variable , names are case sensitive a well .

  - it will throw an error as the cases used here for variable's name is different .

2. Make sure to not use spaces while creating a variable .
  
  - One can use(_) underscore to seprate the names while writing a variable .

3. A variable name should never start with a number or special symbols.
"""

a="shiva"
print(a)

"""#comments

1. Single Line Comment â†ª  to add single line comments " # " hash is used .
  - python completely ignores anything written after " # " *italicized text*
"""

a="shivpal"
#this is comment
print(a)

"""**multiline  comments **

2. To add multiline comment in python , Triple Quatation ('''  ''')are used .

  - (' ' '   _ ' ' ')
"""

'''a="shivpal"
this is comment
print(a)'''

"""# DATA TYPES

**DATA TYPES**

  1. Text Type = Strint(str)

  2. Numeric Types = Integer(int) , Floating (float) , Complex
  
  3. Sequence Types = list , tuple and range

  4. Maping Types = Disctionary (dict)

  5. Set Type = Set , frozenset

  6. Boolean type = bool

  7. Binary Type = bytes , byte array , memoryview
"""

a="shivpal"
print(type(a))

b=1
print(type(b))

c=1.5
print(type(c))

d=True
print(type(d))

e=1+2j
print(type(e))

f=[1,2,3]
print(type(f))

g=(1,2,3)
print(type(g))

h={1,2,3}
print(type(h))

a="shiv"
print(type(a))

b=1
print(type(b))

c=1.5
print(type(c))

d=True
print(type(d))

e=1+2j
print(type(e))

"""# **User Input**

To ask for the input from the user .

  - Default data type is string.
"""

name=input("enter your name ")
class_=input("enter your class ")
print("Welcome " , name)
print("It's your class room  ",class_)

"""# Create Calculater"""

a=int(input("enter first number"))
b=int(input("enter second number"))

print("Addition is :",a+b)
print("Subtraction is :",a-b)
print("Multiplication is :",a*b)
print("Division is :",a/b)
print("Floor Division is :",a//b)
print("Modulus is :",a%b)
print("Exponent is :",a**b)

a=input("enter  number")
print(eval(a))

print(eval(input("Enter number : ")))

"""# **Type Casting And Subtypes :-**
 Conversion of one datatype to another is called as type casting .

 - there are two types of type casting .

      1. Implicit type casting = Where python itself convert one data type to another .

      2. Explicit type conversion = Where the user convert one data type to another .
"""

a=10
print(type(a))

b=float(a)
print(type(b))

c=str(a)
print(type(c))

"""# OPERATORS AND OPERANDS  

   Operators indicate what operation is to be performed while operands indicates on what the action or the operation should be performed .

        X+y=o

        in the given ecpression x , y and o are operands and + , =  are operators .


  - operators can be farther divided into 6 categaries :-

    -  1.Arithmetic Operators
    -  2.Comparision Operators
    -  3.Logical Operators
    -  4.Assignment Operators
    -  5.Membership Operators
    -  6.Identify Operators
    -  7.Bitwise Operators

- 1 . Arithmetic Operator :-

  - Addition    = +
  - Subtraction = -
  - Multiplication = *
  - Floor Division = //
  - Exponentiation = **
  - Division = /
  - Moduals = %
"""

a=5
b=7

print (a+b)
print (a-b)
print (a*b)
print (a/b)
print (a//b)
print (a%b)
print (a**b)

"""- 2 Comparisional Operator :-
  - Less Than ==   <
  - Less Than or Equal To == <=
  - Not Equal To == !=
  - Equal to ==     ==
  - Greater Than Or Equal to ==  >=
  - Greater than ==  >
"""

a=10
print(a>10)

a=int(input("enter first number"))
b=int(input("enter second number"))

print("a==b",a==b)
print("a!=b",a!=b)
print("a>b",a>b)
print("a<b",a<b)
print("a>=b",a>=b)

a=5
b=10

print(a==b)
print(a!=b)
print(a>b)
print(a<b)
print(a>=b)
print(a<=b)

"""3. Logical Operator :-
  - And = True is both the operands are true
  - Or  = True is either of the operands is true
  - Not = True if operends is false ( complement the operand )

"""

a = True
b = False

print(a and b)
print(a or b)
print(not a)
print(not b)

a=5
b=10

print(a==b and a!=b)
print(a==b or a!=b)
print(not(a==b and a!=b))

"""4. Assignment Operator's :-
  - Assignment operators are used in python to assign value to variables .
  - a=6 is a simple assignment operator that assigns the value 6 on the right to the variavle a on the left .

    1. - =  
    2. - +=
    3. - -=
    4. - *=
"""

a=10
print(a)

a+=5
print(a)

a-=5
print(a)

a*=2
print(a)

a/=2
print(a)

a%=5
print(a)

a**2
print(a)

"""5. Identify Operator's :-
  - Identify Operators are used to compare items to see if they are the same subject with the same memory address .

    - is
    - is not
"""

a=input("enter first number")
b=input("enter second number")

print(a is b)
print(a is not b)

a=input("enter first number")
b=input("enter second number")

print(a is b)
print(a is not b)

"""6. Bitwise Operator's :-
  - These operators are used to compare the binary number's .

      - AND (&)
      - OR (|)
      - XOR (^)
      -  Zero Fill left shift (<<)
      - Zero Fill Right shift (>>)

- A. AND operator =
    - Implementation of and operation on binary digit .

      - 0&0  =  0
      - 1&0  = 0
      -0&1  =0
      - 1&1 = 1
"""

a=int(input("enter first number"))
b=int(input("enter second number"))

print(a&b)

print(bin(10))

print(bin(15))

"""- B.  OR  operator :-
  - 0|0=0
  - 0|1=1
  -1|0=1
  -1|1=1
"""

a=int(input("enter first number"))
b=int(input("enter second number"))

print(a|b)

"""- C. XOR Operator :-
  
  - 0^0=0
  -1^0=1
  -0^1=1
  -1^1=1
"""

a=int(input("enter first number"))
b=int(input("enter second number"))

print(a^b)

"""- D. Zero  fill right shift (>>) :-
    
"""

5>>8

10>>2

"""- E. Zero fill Left side (<<):-
  
"""

10<<2

"""7. Membership Operators :-
    
    Membershio operators are used to check the spesence of a sequence in an object .

    - in
    - not in
"""

a="shivpal"
print("pal" in a)
print("pal" not in a)